version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: web_toz_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: web_toz_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: web_toz_server
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongo:27017/web_toz_db?authSource=admin
      JWT_SECRET: dev_jwt_secret_change_in_production
      JWT_EXPIRE: 7d
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: info
    ports:
      - "5000:5000"
    volumes:
      - ./server/logs:/app/logs
    depends_on:
      - mongo
    networks:
      - app-network

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: web_toz_client
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_APP_NAME: WEB TOZ PROJE 1
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - app-network

volumes:
  mongo_data:

networks:
  app-network:
    driver: bridge